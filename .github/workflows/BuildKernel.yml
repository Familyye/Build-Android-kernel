  build:
    name: "Build Kernel"
    runs-on: ubuntu-latest
    needs: read_config
    if: ${{ needs.read_config.outputs.run_build == 'true' }}
    strategy:
      matrix:
        tools: ${{ fromJson(needs.read_config.outputs.matrix_tools_preset) }}
      fail-fast: false

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up jq"
        run: sudo apt-get install -y jq

      - name: "Cache dependencies"
        uses: actions/cache@v4
        with:
          path: /usr/local/bin
          key: ${{ runner.os }}-gcc-${{ matrix.tools.aarch64-linux-android- }}-clang-${{ matrix.tools.clang }}-ld-${{ matrix.tools.ld }}-make-${{ matrix.tools.make }}-objcopy-${{ matrix.tools.objcopy }}-objdump-${{ matrix.tools.objdump }}-strip-${{ matrix.tools.strip }}
          restore-keys: |
            ${{ runner.os }}-gcc-${{ matrix.tools.aarch64-linux-android- }}-clang-${{ matrix.tools.clang }}-ld-${{ matrix.tools.ld }}-make-${{ matrix.tools.make }}-objcopy-${{ matrix.tools.objcopy }}-objdump-${{ matrix.tools.objdump }}-strip-${{ matrix.tools.strip }}

      - name: "Download tools -- 下载编译工具"
        run: |
          echo "下载编译工具"
          echo "更新完成"
          echo "安装特定版本的编译工具"

      - name: "Build Kernel"
        run: |
          echo "构建内核"
          # 在此处添加内核构建命令